import sys
sys.path.insert(0, '/Users/selmanorhan/Documents/GitHub/Yazlab-II-Web-Scraping/site-packages')  # 'site-packages/selenium' kısmını kendi yüklü olduğunuz yerle değiştirin
sys.path.insert(0, '/Users/selmanorhan/Documents/GitHub/Yazlab-II-Web-Scraping/site-packages/beautifulsoup4-4.12.3')  # 'site-packages/selenium' kısmını kendi yüklü olduğunuz yerle değiştirin
import os
import shutil

from flask import Flask, render_template, request, redirect, url_for, send_file
from flask_pymongo import PyMongo
from datetime import datetime
from dergipark_search import get_dergipark_search_results  # dergipark_search.py dosyanızdan get_dergipark_search_results fonksiyonunu import edin
from spellchecker import SpellChecker

app = Flask(__name__)
app.config['MONGO_URI'] = 'mongodb://localhost:27018/Yazlab'  # MongoDB URI'nizi buraya ekleyin
mongo = PyMongo(app)

DOSYA_DIZINI = '/Users/selmanorhan/Documents/GitHub/Yazlab-II-Web-Scraping/static/downloaded-files'

spell_checker = SpellChecker()

def find_spelling_errors(text):
    words = text.split()
    corrected_words = [spell_checker.correction(word) for word in words]
    if corrected_words == "":
        corrected_words = text
    return " ".join(corrected_words)

class Yayin:
    def __init__(self, data):
        self.yayin_id = data.get("yayin_id")
        self.yayin_adi = data.get("yayin_adi")
        self.yazarlar = data.get("yazarlar", [])
        self.yayin_turu = data.get("yayin_turu")
        self.yayinlanma_tarihi = data.get("yayinlanma_tarihi")
        self.yayinevi_adi = data.get("yayinevi_adi")
        self.anahtar_kelimeler_makale = data.get("anahtar_kelimeler_makale", [])
        self.ozet = data.get("ozet")
        self.referanslar = data.get("referanslar", [])
        self.alinti_sayisi = data.get("alinti_sayisi", 0)
        self.doi_numarasi = data.get("doi_numarasi")
        self.url_adresi = data.get("url_adresi")
        self.pdf_adresi = data.get("pdf_adresi")
        self.dosya_yolu = data.get("dosya_yolu")
        self.aratilan_kelime_id = data.get("aratilan_kelime_id")

@app.route('/', methods=['GET', 'POST'])
def index():
    if request.method == 'POST':
        aranan_kelime = request.form['aranan_kelime']
        if aranan_kelime != "":  
            # Yazım hatalarını düzelt
            corrected_keyword = find_spelling_errors(aranan_kelime)
            # Arama sonuçlarını getir
            print("Aranan kelime : ", corrected_keyword)
            sonuclar = get_dergipark_search_results(corrected_keyword)
            print("\n", sonuclar)
            for sonuc in sonuclar:
                yayin_data = {
                    "yayin_id": sonuc['yayın id'],
                    "yayin_adi": sonuc['yayın adı'],
                    "yazarlar": sonuc['yazar adı'].split(", "),
                    "yayin_turu": sonuc['yayın türü'],
                    "yayinlanma_tarihi": sonuc['yayınlanma tarihi'],
                    "yayinevi_adi": sonuc['yayıncı adı'],
                    "anahtar_kelimeler_makale": sonuc['anahtar kelimeler (makaleye ait)'].split(", "),
                    "ozet": sonuc['özet'],
                    "referanslar": sonuc['referanslar'],
                    "alinti_sayisi": sonuc['alıntı sayısı'],
                    "doi_numarasi": sonuc['doi numarası'],
                    "url_adresi": sonuc['url'],
                    "pdf_adresi": sonuc['pdf'],
                    "dosya_yolu": sonuc['dosya_yolu']
                }
                # Yayın verilerini MongoDB'ye kaydet
                mongo.db.sonuclar.insert_one(yayin_data)
        return redirect(url_for('index'))  
    else:
        yayinlar_from_mongo = mongo.db.sonuclar.find()
        yayinlar = [Yayin(data=yayin) for yayin in yayinlar_from_mongo]
        return render_template('index.html', yayinlar=yayinlar)

@app.route('/dosya_tarayici')
def dosya_tarayici():
    dosyalar = os.listdir(DOSYA_DIZINI)
    return render_template('dosya_tarayici.html', dosyalar=dosyalar, dosya_dizini=DOSYA_DIZINI)

@app.route('/dosya_goster/<dosya_adi>')
def dosya_goster(dosya_adi):
    dosya_yolu = os.path.join(DOSYA_DIZINI, dosya_adi)
    if os.path.exists(dosya_yolu):
        if dosya_adi.lower().endswith(('.png', '.jpg', '.jpeg', '.gif', '.pdf')):
            return send_file(dosya_yolu)
        elif os.path.isdir(dosya_yolu):
            dosyalar = os.listdir(dosya_yolu)
            return render_template('dosya_tarayici.html', dosyalar=dosyalar, dosya_dizini=dosya_yolu)
        elif os.path.isfile(dosya_yolu):
            return send_file(dosya_yolu)
    return f"{dosya_adi} adlı dosya bulunamadı."

if __name__ == '__main__':
    app.run(debug=True)
 

 <!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Search Results</title>
    <style>
        body {
            font-family: Arial, sans-serif;
            background-color: #f4f4f4;
            margin: 0;
            padding: 20px;
        }
        h1 {
            text-align: center;
            color: #333;
        }
        form {
            text-align: center;
            margin-bottom: 20px;
        }
        input[type="text"] {
            padding: 10px;
            width: 300px;
            border: 1px solid #ccc;
            border-radius: 4px;
        }
        button[type="submit"] {
            padding: 10px 20px;
            background-color: #4CAF50;
            color: white;
            border: none;
            border-radius: 4px;
            cursor: pointer;
        }
        button[type="submit"]:hover {
            background-color: #45a049;
        }
        table {
            width: 100%;
            border-collapse: collapse;
            background-color: #fff;
            box-shadow: 0 0 20px rgba(0, 0, 0, 0.1);
            border-radius: 5px;
            overflow: hidden;
            margin-bottom: 20px;
        }
        th, td {
            border: 1px solid #ddd;
            padding: 10px;
            text-align: left;
        }
        th {
            background-color: #4CAF50;
            color: white;
        }
        tbody tr:nth-child(even) {
            background-color: #f2f2f2;
        }
        .container {
            display: flex;
            flex-wrap: wrap;
            gap: 20px;
        }
        .card {
            background-color: #fff;
            box-shadow: 0 0 10px rgba(0, 0, 0, 0.1);
            border-radius: 5px;
            overflow: hidden;
            width: calc(33.33% - 20px);
            padding: 20px;
        }
        .card h2 {
            color: #333;
            margin-top: 0;
        }
        .card p {
            color: #666;
        }
        .card a {
            color: #4CAF50;
            text-decoration: none;
        }
        .card a:hover {
            text-decoration: underline;
        }
        .icon {
            margin-right: 5px;
        }
        .icon-text {
            display: none;
        }
    </style>
</head>
<body>
    <h1>Search Results</h1>
    <form action="/" method="POST">
        <input type="text" id="aranan_kelime" name="aranan_kelime" placeholder="Aranan Kelime">
        <button type="submit">Ara</button>
    </form>


    <table id="yayinlar_table">
        <thead>
            <tr>
                <th onclick="sortTable(0)">Yayın Adı</th>
                <th onclick="sortTable(1)">Yazarlar</th>
                <th onclick="sortTable(2)">Yayın Türü</th>
                <th onclick="sortTable(3)">Yayınlanma Tarihi</th>
                <th onclick="sortTable(4)">Yayınevi Adı</th>
                <th onclick="sortTable(5)">Anahtar Kelimeler</th>
                <th onclick="sortTable(6)">URL Adresi</th>
                <th onclick="sortTable(7)">PDF Adresi</th>
                <th onclick="sortTable(8)">Dosya Yolu</th>
            </tr>
        </thead>
        <tbody>
            {% for yayin in yayinlar %}
                <tr>
                    <td>{{ yayin.yayin_adi }}</td>
                    <td>{{ yayin.yazarlar|join(", ") }}</td>
                    <td>{{ yayin.yayin_turu }}</td>
                    <td>{{ yayin.yayinlanma_tarihi }}</td>
                    <td>{{ yayin.yayinevi_adi }}</td>
                    <td>{{ yayin.anahtar_kelimeler_makale|join(", ") }}</td>
                    <td><a href="{{ yayin.url_adresi }}" target="_blank"><img src="static/icons/web.png" alt="Web" class="icon" width="24" height="24"><span class="icon-text"></span></a></td>
                    <td><a href="{{ yayin.pdf_adresi }}" target="_blank"><img src="static/icons/document.png" alt="Pdf" class="icon" width="24" height="24"><span class="icon-text"></span></a</td>
                    <td> <a href="{{ yayin.dosya_yolu }}" target="_blank"><img src="static/icons/download.png" alt="Local" class="icon" width="24" height="24"><span class="icon-text"></span></a></td>
                </tr>
            {% endfor %}
        </tbody>
    </table>
    <div class="container">
        {% for yayin in yayinlar %}
            <div class="card">
                <h2>{{ yayin.yayin_adi }}</h2>
                <p><strong>Yazarlar:</strong> {{ yayin.yazarlar|join(", ") }}</p>
                <p><strong>Yayın Türü:</strong> {{ yayin.yayin_turu }}</p>
                <p><strong>Yayınlanma Tarihi:</strong> {{ yayin.yayinlanma_tarihi }}</p>
                <p><strong>Yayınevi Adı:</strong> {{ yayin.yayinevi_adi }}</p>
                <p><strong>Anahtar Kelimeler:</strong> {{ yayin.anahtar_kelimeler_makale|join(", ") }}</p>
                <p><strong>URL Adresi:</strong> <a href="{{ yayin.url_adresi }}" target="_blank"><img src="static/icons/web.png" alt="Web" class="icon" width="24" height="24"><span class="icon-text"></span></a></p>
                <p><strong>PDF Adresi:</strong> <a href="{{ yayin.pdf_adresi }}" target="_blank"><img src="static/icons/document.png" alt="Pdf" class="icon" width="24" height="24"><span class="icon-text"></span></a></p>
                <p><strong>Dosya Yolu:</strong> <a href="{{ yayin.dosya_yolu }}" target="_blank"><img src="static/icons/download.png" alt="Local" class="icon" width="24" height="24"><span class="icon-text"></span></a></p>
            </div>
        {% endfor %}
    </div>


    <script>
        // JavaScript code for sorting the table
        function sortTable(columnIndex) {
            var table, rows, switching, i, x, y, shouldSwitch;
            table = document.getElementById("yayinlar_table");
            switching = true;
            while (switching) {
                switching = false;
                rows = table.rows;
                for (i = 1; i < (rows.length - 1); i++) {
                    shouldSwitch = false;
                    x = rows[i].getElementsByTagName("td")[columnIndex];
                    y = rows[i + 1].getElementsByTagName("td")[columnIndex];
                    if (x.innerHTML.toLowerCase() > y.innerHTML.toLowerCase()) {
                        shouldSwitch = true;
                        break;
                    }
                }
                if (shouldSwitch) {
                    rows[i].parentNode.insertBefore(rows[i + 1], rows[i]);
                    switching = true;
                }
            }
        }
    </script>

    <script>
        // JavaScript code for filtering the table
        document.getElementById("aranan_kelime").addEventListener("keyup", function() {
            var input, filter, table, tr, td, i, j, txtValue;
            input = document.getElementById("aranan_kelime");
            filter = input.value.toUpperCase();
            table = document.getElementById("yayinlar_table");
            tr = table.getElementsByTagName("tr");
            for (i = 0; i < tr.length; i++) {
                var display = "none"; // Varsayılan olarak satırı gizle
                // Her sütun için filtreleme yap
                for (j = 0; j < tr[i].getElementsByTagName("td").length; j++) {
                    td = tr[i].getElementsByTagName("td")[j];
                    if (td) {
                        txtValue = td.textContent || td.innerText;
                        if (txtValue.toUpperCase().indexOf(filter) > -1) {
                            display = ""; // Eğer metin bulunursa, satırı görünür yap
                            break; // Metin bulunduğunda döngüyü kır
                        }
                    }
                }
                tr[i].style.display = display; // Satırın görünürlüğünü güncelle
            }
        });
    </script>
    
    
</body>
</html>


